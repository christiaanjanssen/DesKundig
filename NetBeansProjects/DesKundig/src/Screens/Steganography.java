/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Screens;

import Steganography.AfbeelingenFilter;
import Steganography.Steganografie;
import be.belgium.eid.eidlib.BeID;
import be.belgium.eid.exceptions.EIDException;
import deskundig.EncryptieText;
import deskundig.FileDes;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Tycha
 */
public class Steganography extends javax.swing.JFrame {
    private File inFile, outFile;
    private String stat_pad = "";
    private String stat_naam = "";
    private Steganografie model = new Steganografie();
    private String key1Key;
    private String key2Key;
    private String bericht;
    String[] sleutels = new String[3];
    private EncryptieText enc;
    
    /**
     * Creates new form Steganography
     */
    public Steganography() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblPassword2 = new javax.swing.JLabel();
        lblPassword3 = new javax.swing.JLabel();
        BtnVercijfer = new javax.swing.JButton();
        btnOntcijfer = new javax.swing.JButton();
        afbeelding_invoer = new javax.swing.JLabel();
        btnCompare = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoer = new javax.swing.JTextArea();
        txtPassword2 = new javax.swing.JPasswordField();
        txtPassword4 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel1.setText("Steganography");

        lblData.setText("No data");

        jButton1.setText("Get data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblPassword2.setText("Password");

        lblPassword3.setText("Confirm password");

        BtnVercijfer.setText("Encrypt image");
        BtnVercijfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVercijferActionPerformed(evt);
            }
        });

        btnOntcijfer.setText("Decrypt image");
        btnOntcijfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOntcijferActionPerformed(evt);
            }
        });

        afbeelding_invoer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCompare.setText("Compare two images (original and encrypted)");
        btnCompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompareActionPerformed(evt);
            }
        });

        invoer.setColumns(20);
        invoer.setRows(5);
        jScrollPane1.setViewportView(invoer);

        txtPassword2.setText("jPasswordField1");

        txtPassword4.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnVercijfer, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOntcijfer, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(afbeelding_invoer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(txtPassword2)
                            .addComponent(txtPassword4)))
                    .addComponent(btnCompare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPassword2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPassword3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(txtPassword4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnVercijfer, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(btnOntcijfer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(afbeelding_invoer, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCompare, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            BeID id = new BeID(true);
            key1Key = id.getIDData().getCardNumber();
            key2Key = id.getIDData().getChipNumber();
            lblData.setText("Is gelukt!");
        } catch (EIDException ex) {
            Logger.getLogger(Cryptography.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompareActionPerformed
        new SteganographyCompare().setVisible(true);
    }//GEN-LAST:event_btnCompareActionPerformed

    private void BtnVercijferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVercijferActionPerformed
        String soort = "";
        if (!txtPassword2.getText().equals(txtPassword4.getText())) {
            JOptionPane.showMessageDialog(null, "Passwords don't match!", "Error", JOptionPane.ERROR_MESSAGE);
            txtPassword2.setText("");
            txtPassword4.setText("");
        } else if (txtPassword2.getText().length() < 10) {
            JOptionPane.showMessageDialog(null, "Password needs to be at least 10 characters long", "Error", JOptionPane.ERROR_MESSAGE);
            txtPassword2.setText("");
            txtPassword4.setText("");
        } else if (key1Key == null || key2Key == null) {
            JOptionPane.showMessageDialog(null, "No e-id data found (click Get data)", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (invoer.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No text found", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        this.vercijferen();
        }
    }//GEN-LAST:event_BtnVercijferActionPerformed

    private void btnOntcijferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOntcijferActionPerformed
        
        this.ontcijferen();
    }//GEN-LAST:event_btnOntcijferActionPerformed

     public String encrypteren(String tekst) {    
        EncryptieText e = new EncryptieText(sleutels);
        String encryptResult = e.Encrypteer(tekst);
        return encryptResult;
    }
    
    public String decrypteren(String tekst) {                                         
        EncryptieText e = new EncryptieText(sleutels);
        String decryptResult = e.Decrypteer(tekst);
        return decryptResult;
    }
    
    public void vercijferen() {           
        sleutels[0] = key1Key;
        sleutels[1] = key2Key;
        sleutels[2] = txtPassword4.getText().toString();
        JFileChooser chooser = new JFileChooser("./");                          //zet standaard pad voor het bestand te kiezen dat ontcijfert moet worden
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);       //men gaat hier de manier van kiezen koppelen aan de kiezer, dus zowel bestanden als mappen
        chooser.setFileFilter(new AfbeelingenFilter());                         //Er wordt een filter op het soort bestanden gezet zodat alleen images gekozen kunnen worden
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {                         //als de terugkeerwaarde goedgekeurd is
            File directory2 = chooser.getSelectedFile();                        //dan gaat men het bestand ophalen
            try {
                String teksten = this.encrypteren(invoer.getText().toString());
                String ext = AfbeelingenFilter.getExtensie(directory2);         //extensie van de afbeelding wordt opgehaald
                String naam = directory2.getName();                             //naam van de directory wordt opgehaald en in de variabele naam gestoken
                String pad = directory2.getPath();                              //het pad naar de directory wordt opgehaald en in de variabele pad gestoken
                pad = pad.substring(0, pad.length() - naam.length() - 1);       //de slash achteraan het pas wordt verwijderd
                naam = naam.substring(0, naam.length() - 4);                    //de extensie van de afbeelding wordt verwijderd
                String stegan = JOptionPane.showInputDialog(this,               //er wordt gevraagt naar een naam voor het uitvoerbestand
                        "Geef een bestandnaam op:", "bestandsnaam",
                        JOptionPane.PLAIN_MESSAGE).toString();
                if (model.vercijferen(pad, naam, ext, stegan, teksten)) //als de vercijfering lukt
                    {
                        JOptionPane.showMessageDialog(this, "De afbeelding is succesvol vercijferd", //laat een bericht zien dat het succevol was
                                "Success!", JOptionPane.INFORMATION_MESSAGE);
                    } else //anders
                    {
                        JOptionPane.showMessageDialog(this, "The Image could not be encoded!", //laat een bericht zien dat de tekst niet vercijfert kan worden
                                "Error!", JOptionPane.INFORMATION_MESSAGE);
                    }
                afbeelding_invoer.setIcon(new ImageIcon(ImageIO.read(new File(pad + "/" + stegan + ".png"))));  
            } catch (HeadlessException | IOException except) {                                        //als er een fout opgegooid wordt
                JOptionPane.showMessageDialog(this, "Het bestand kan niet worden gevonden of het kan niet geopend worden",
                        "Foutmelding!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }    
    
    public void ontcijferen() {            
        invoer.setText("");
        JFileChooser Kiezer = new JFileChooser("./");                           //zet standaard pad voor het bestand te kiezen dat ontcijfert moet worden
        Kiezer.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);        //men gaat hier de manier van kiezen koppelen aan de kiezer, dus zowel bestanden als mappen
        Kiezer.setFileFilter(new AfbeelingenFilter());                          //Er wordt een filter op het soort bestanden gezet zodat alleen images gekozen kunnen worden
        int Terugkeerwaarde = Kiezer.showOpenDialog(this);
        if (Terugkeerwaarde == JFileChooser.APPROVE_OPTION) {                   //als de terugkeerwaarde goedgekeurd is
            File directory = Kiezer.getSelectedFile();                          //dan gaat men het bestand ophalen
            try {
                stat_naam = directory.getName();                                //2. De naam van het gekozen bestand ophalen
                stat_pad = directory.getPath();                                 //3. Het effectieve pad ophalen
                stat_pad = stat_pad.substring(0, stat_pad.length() - stat_naam.length() - 1);    //het laatste karakter verwijderen van het pad
                stat_naam = stat_naam.substring(0, stat_naam.length() - 4);     //de extensie verwijderen van de naam dus .jpg of .png
                bericht = model.ontcijferen(stat_pad, stat_naam).toString();        //De tekst gaan vercijfer door middel van de vercijfermethode in de staganography klasse
                System.out.println(stat_pad + ", " + stat_naam);
                String einde = this.decrypteren(bericht);
                if (!einde.equals("")) //als de tekst niet leeg was
                {
                    JOptionPane.showMessageDialog(this, "De afbeelding is succesvol ontcijferd",
                            "Succes!", JOptionPane.INFORMATION_MESSAGE);
                    invoer.setText("");
                    lblData.setIcon(null);
                    invoer.setText(einde);                                    //zet de invoer om naar de inhoud van de variabelen bericht
                } else                                                          //anders
                {
                    JOptionPane.showMessageDialog(this, "De afbeelding kon niet worden ontcijferd!",
                            "Fout!", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            }
            catch(Exception e){
            }
            }
        }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Steganography.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Steganography.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Steganography.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Steganography.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Steganography().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnVercijfer;
    private javax.swing.JLabel afbeelding_invoer;
    private javax.swing.JButton btnCompare;
    private javax.swing.JButton btnOntcijfer;
    private javax.swing.JTextArea invoer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblPassword2;
    private javax.swing.JLabel lblPassword3;
    private javax.swing.JPasswordField txtPassword2;
    private javax.swing.JPasswordField txtPassword4;
    // End of variables declaration//GEN-END:variables
}
